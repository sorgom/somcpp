# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=ci
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),ci)
  docopts_config = ci
  fglob_config = ci
  lib_config = ci

else ifeq ($(config),trace_on)
  docopts_config = trace_on
  fglob_config = trace_on
  lib_config = trace_on

else ifeq ($(config),trace_all)
  docopts_config = trace_all
  fglob_config = trace_all
  lib_config = trace_all

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := docopts fglob lib

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

docopts:
ifneq (,$(docopts_config))
	@echo "==== Building docopts ($(docopts_config)) ===="
	@${MAKE} --no-print-directory -C . -f docopts.make config=$(docopts_config)
endif

fglob:
ifneq (,$(fglob_config))
	@echo "==== Building fglob ($(fglob_config)) ===="
	@${MAKE} --no-print-directory -C . -f fglob.make config=$(fglob_config)
endif

lib:
ifneq (,$(lib_config))
	@echo "==== Building lib ($(lib_config)) ===="
	@${MAKE} --no-print-directory -C . -f lib.make config=$(lib_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f docopts.make clean
	@${MAKE} --no-print-directory -C . -f fglob.make clean
	@${MAKE} --no-print-directory -C . -f lib.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  ci"
	@echo "  trace_on"
	@echo "  trace_all"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   docopts"
	@echo "   fglob"
	@echo "   lib"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"